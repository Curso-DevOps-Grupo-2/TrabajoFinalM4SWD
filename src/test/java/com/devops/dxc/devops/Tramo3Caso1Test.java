package com.devops.dxc.devops;
// Generated by Selenium IDE
import org.junit.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.util.HashMap;
import java.util.Map;
import com.devops.dxc.devops.model.Dxc;
// import com.devops.dxc.devops.model.Util;

import org.junit.Before;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.ResponseEntity;

@SpringBootTest
public class Tramo3Caso1Test {

  private WebDriver driver;  
  ResponseEntity<Dxc> result;
  Map<String, Integer> params = new HashMap<String, Integer>();

  @Before
  public void setUp() {
    TestRestTemplate testRestTemplate = new TestRestTemplate();
    System.out.println("Iniciando configuraci√≥n...");
    System.setProperty("webdriver.chrome.driver","drivers/chromedriver.exe");
    driver = new ChromeDriver();
    String url = "http://localhost:8081/rest/msdxc/calcula-10?sueldo={sueldo}&ahorro={ahorro}";
    params.put("sueldo", 700000);
    params.put("ahorro", 1500000);
    result = testRestTemplate.getForEntity(url, Dxc.class, params);
  }

  @Test
  public void tramo3Caso1() {

    driver.get("http://localhost:4200/");
    driver.manage().window().setSize(new Dimension(820, 725));
    driver.findElement(By.id("mat-input-0")).click();
    driver.findElement(By.id("mat-input-0")).sendKeys("1500000");
    {
      WebElement element = driver.findElement(By.cssSelector(".mat-button-wrapper"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.id("mat-input-1")).sendKeys("700000");
    driver.findElement(By.cssSelector(".mat-button-wrapper")).click();
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebDriverWait wait = new WebDriverWait(driver, 10);
      wait.until(ExpectedConditions.textToBe(By.id("result_10xc"),  ""+result.getBody().getDxc()));
    }

    String diezXC;
    String saldoPost;
    String impuesto;
    diezXC = driver.findElement(By.id("result_10xc")).getText();
    saldoPost = driver.findElement(By.id("result_saldo_post")).getText();    
    impuesto = driver.findElement(By.id("result_impuesto")).getText();    

    assertEquals(result.getBody().getDxc(), Integer.parseInt(diezXC));
    assertEquals(result.getBody().getSaldo(), Integer.parseInt(saldoPost));
    assertEquals(result.getBody().getImpuesto(), Integer.parseInt(impuesto));

  }
}
